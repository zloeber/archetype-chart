{{- $root := . -}}
{{- $common := dict "Values" .Values.common -}}
{{- $noCommon := omit .Values "common" -}}
{{- $overrides := dict "Values" $noCommon -}}
{{- $noValues := omit . "Values" -}}
{{- with merge $noValues $overrides $common -}}
{{- $deployment := .Values.deployment -}}

{{- if $deployment.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
{{- with $deployment.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
{{- end }}
  labels:
    {{- include "common.labels" $root | nindent 4 }}
    {{- with $deployment.labels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    prometheus: "{{ .Values.prometheusInstance | default "kube-prometheus" }}"

spec:
  replicas: {{ .Values.replicaCount | default "1" }}
  selector:
    matchLabels:
      {{- if $deployment.matchLabels }}
      {{- toYaml $deployment.matchLabels | nindent 6 }}
      {{- else }}
      {{- include "common.service.selectors" $root | nindent 6 }}
      {{- end }}
  {{- with $deployment.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  revisionHistoryLimit: {{ $deployment.revisionHistoryLimit | default "10" }}
  template:
    metadata:
      name: {{ include "common.fullname" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with $deployment.pod.annotations }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      labels:
{{ include "common.service.selectors" $root | indent 8 }}
{{- if $deployment.pod }}
{{- with $deployment.pod.labels }}
{{ toYaml . | indent 8 }}
{{- end }}
{{- end }}
    spec:
      containers:
      - name: {{ include "common.fullname" . }}
        image: {{ required "image.repository is required!" .Values.image.repository }}:{{ required "image.tag is required!" .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
{{- if $deployment.pod.env }}
        env:
          {{ $deployment.pod.env | toYaml | nindent 10 }}
{{- end }}
{{- if .Values.configMaps.enabled }}
        envFrom:
          - configMapRef:
              name: {{ include "configmap.name" $root }}
{{- if .Values.configMaps.files }}
          - configMapRef:
              name: {{ include "configmap.name" $root }}-files
{{- end }}
{{- end }}

        {{- if $deployment.pod.command }}
        {{- with $deployment.pod.command }}
        command:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        {{- if $deployment.pod.args }}
        {{- with $deployment.pod.args }}
        args:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        {{- with $deployment.pod.securityContext }}
        securityContext:
          {{ toYaml . | nindent 10 }}
        {{- end }}
        ports:
        {{- if $deployment.ports }}
        {{- range $key, $value := $deployment.ports }}
          - name: {{ $key | quote }}
            containerPort: {{ $value }}
        {{- end }}
        {{- if $deployment.livelinessProbe.enabled }}
        {{- with $deployment.livelinessProbe.probe }}
        livenessProbe:
        {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        {{- if $deployment.readinessProbe.enabled }}
        {{- with $deployment.readinessProbe.probe }}
        readinessProbe:
        {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        {{- else }}
          {{- include "common.container.ports" $root | nindent 10 }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - mountPath: {{ .Values.persistence.mountPath | quote }}
          name: storage
        {{ include "common.files.volumeMounts" . | nindent 8 }}
        {{- end }}
        {{- with .Values.probes }}
        probes:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
{{- if .Values.dockercfg.enabled }}
        - name: {{ include "common.fullname" . }}
{{- end }}
{{- with .Values.image.pullSecrets }}
{{- range . }}
        - name: {{ . }}
{{- end }}
{{- end }}
{{- end }}
{{- if .Values.affinity.enabled }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: {{ .Values.affinity.nodePoolLabel | default "agentpool" }}
                operator: In
                values:
                - {{ .Values.affinity.nodePoolTarget | default "workload" }}
{{- end }}
{{- if .Values.persistence }}
      volumes:
        - name: storage
{{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "common.fullname" .) }}
{{- else }}
          emptyDir: {}
{{- end }}
{{- end }}
{{ include "common.files.volumes" . | indent 6 }}
{{- end -}}
{{- end -}}